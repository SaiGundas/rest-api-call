name: Build and Deploy to Sandbox

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3 #Uses in-built action to Checkout the Repo
    - name: Cache Dependencies
      uses: actions/cache@v3 #Uses in-built action to cache dependencies
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Set up JDK 11 #Sets up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11

    - name: Add repo credentials
      uses: s4u/github-action-maven-settings@v2
      with:
        servers: |
          [
            {
              "id": "mule-enterprise",
              "username":${{ secrets.mule_nexus_username }},
              "password":${{ secrets.mule_nexus_password }}
            }
          ]
      - name: Print effective settings (optional)
        run: mvn help:effective-settings


    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2

    - name: Upload artifact 
      uses: actions/upload-artifact@v3
      with:
          name: artifacts
          path: target/*.jar

  # Deploy to Developer job starts here       

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    
    - name: Checkout this repo
      uses: actions/checkout@v3

    - name: Cache dependencies
      uses: actions/cache@v3

      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - uses: actions/download-artifact@v3
      with:
        name: artifacts

    - name: Deploy to Sandbox
      env:
        USERNAME: ${{ secrets.ANYPOINT_PLATFORM_USERNAME }} # Secrets loaded from GitHub repository secrets
        PASSWORD: ${{ secrets.ANYPOINT_PLATFORM_PASSWORD }}

      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Danypoint.username="$USERNAME" \
         -Danypoint.password="$PASSWORD" \
         -Denv=Developer \
         -DskipTests
